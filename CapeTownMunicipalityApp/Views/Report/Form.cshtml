@using Microsoft.AspNetCore.Http
@using System.Linq
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = @Localizer["Report"];
    var categories = Enum.GetValues(typeof(ReportCategory)).Cast<ReportCategory>().ToList();
}
<div class="report-container">
    <h2 class="report-title">
        @Localizer["Report an Issue"]
        <span class="report-title-underline"></span>
    </h2>

    <form id="reportForm" method="post" enctype="multipart/form-data" asp-controller="Report" asp-action="Submit">
        <div class="field">
            <label>@Localizer["Location"]</label>
            <input id="location" name="location" type="text" placeholder="@Localizer["Enter location"]..." />
        </div>

        <div class="field">
            <label>@Localizer["Category"]</label>
            <select id="category" name="category">
                <option value="">-- None --</option>
                @foreach (var c in categories)
                {
                    <option value="@c">@c</option>
                }
            </select>
        </div>

        <div class="field">
            <label>@Localizer["Description"]</label>
            <textarea id="description" name="description" rows="6" placeholder="@Localizer["Describe the issue"]..."></textarea>
        </div>

        <div class="field">
            <label>@Localizer["Attach documents"]</label>
            <input id="attachments" name="attachments" type="file" multiple />
        </div>

        <button type="submit" class="submit-btn">@Localizer["Submit"]</button>
    </form>
</div>

<div class="progress-wrap">
    <div id="progressBar" class="progress-bar"></div>
</div>

<div class="back" onclick="location.href='/'">
    <svg width="20" height="20" viewBox="0 0 24 24">
        <path d="M15 18l-6-6 6-6" stroke="#333" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round" />
    </svg>
</div>

@section Styles {
    <style>
        .report-container {
            margin: 80px auto 60px auto;
            padding: 32px;
            background: #F8FBFF;
            border-radius: 12px;
            box-shadow: 0 8px 20px rgba(0,0,0,0.1);
            max-width: 700px;
        }

        .report-title {
            text-align: center;
            font-size: 2rem;
            margin-bottom: 24px;
            color: #333;
            position: relative;
        }

        .report-title-underline {
            display: block;
            width: 60px;
            height: 4px;
            background: #B0C434;
            margin: 8px auto 0 auto;
            border-radius: 2px;
        }

        .field {
            margin-bottom: 16px;
            display: flex;
            flex-direction: column;
        }

            .field label {
                margin-bottom: 6px;
                font-weight: 600;
                color: #555;
            }

            .field input,
            .field select,
            .field textarea {
                padding: 10px 12px;
                border-radius: 6px;
                border: 1px solid #ccc;
                outline: none;
                font-size: 1rem;
            }

        .submit-btn {
            width: 100%;
            padding: 12px;
            background: #B0C434;
            color: #fff;
            border: none;
            border-radius: 8px;
            font-size: 1.1rem;
            cursor: pointer;
        }

        .progress-wrap {
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 12px;
            background: #eee;
            border-radius: 0;
            overflow: hidden;
        }

        .progress-bar {
            height: 100%;
            width: 0%;
            background: #B0C434;
            transition: width 0.2s;
        }

        .back {
            position: fixed;
            left: 16px;
            top: 100px;
            width: 44px;
            height: 44px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            background: #eee;
            cursor: pointer;
            z-index: 1000;
        }
    </style>
}

@section Scripts {
    <script>
        const progressBar = document.getElementById('progressBar');
        const locationInput = document.getElementById('location');
        const categorySelect = document.getElementById('category');
        const desc = document.getElementById('description');
        const attachments = document.getElementById('attachments');

        const fields = [locationInput, categorySelect, desc, attachments];

        function computeProgress() {
            let filled = 0;
            if (locationInput.value.trim().length > 0) filled++;
            if (categorySelect.value && categorySelect.value.length > 0) filled++;
            if (desc.value.trim().length > 0) filled++;
            if (attachments.files && attachments.files.length > 0) filled++;
            const percent = Math.round((filled / fields.length) * 100);
            progressBar.style.width = percent + '%';
        }

        fields.forEach(f => f.addEventListener('input', computeProgress));
        attachments.addEventListener('change', computeProgress);

        computeProgress();
    </script>
}
